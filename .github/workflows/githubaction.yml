name: CI/CD
on:
  push:
    branches:
      - 'develop'
  pull_request:
    branches:
      - 'develop'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Start Redis
        uses: supercharge/redis-github-action@1.1.0
        with:
          redis-version: 6

      - name: Test with Gradle # test application build
        run: ./gradlew --info test

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-results/**/*.xml

      # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir deploy

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

      # appspec.yml Copy
      - name: Copy appspec
        run: cp appspec.yml ./deploy/

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./photoragemember-member.zip ./deploy

      # S3 Bucket으로 copy
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 --acl private ./photoragemember-member.zip s3://photorage-deploy/

      # Deploy
      - name: Deploy
        run: aws deploy create-deployment --application-name photorage-codedeploy  --deployment-group-name photorage-backend --s3-location bucket=photorage-deploy,bundleType=zip,key=photoragemember-member.zip
